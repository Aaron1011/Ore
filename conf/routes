# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# ---------- API (v1) ----------
GET     /api/projects                                           @controllers.Api.projects(version = "v1", categories: Option[String], limit: Option[Int], offset: Option[Int])
GET     /api/project                                            @controllers.Api.project(version = "v1", pluginId: Option[String])
GET     /api/users                                              @controllers.Api.users(version = "v1", limit: Option[Int], offset: Option[Int])
GET     /api/users/:user                                        @controllers.Api.user(version = "v1", user)

GET     /api/:version/projects                                  @controllers.Api.projects(version, categories: Option[String], limit: Option[Int], offset: Option[Int])
GET     /api/:version/project                                   @controllers.Api.project(version, pluginId: Option[String])
GET     /api/:version/users                                     @controllers.Api.users(version, limit: Option[Int], offset: Option[Int])
GET     /api/:version/users/:user                               @controllers.Api.user(version, user)


# ---------- Application ----------

GET     /                                                       @controllers.Application.showHome(categories: Option[String])
GET     /login                                                  @controllers.Application.logIn(sso: Option[String], sig: Option[String])
GET     /logout                                                 @controllers.Application.logOut

# ---------- Projects ----------

GET     /new                                                    @controllers.project.Projects.showCreator

POST    /new/upload                                             @controllers.project.Projects.upload
GET     /new/:author/:slug                                      @controllers.project.Projects.showCreatorWithMeta(author, slug)

GET     /:user                                                  @controllers.Application.showUser(user)
POST    /settings/tagline                                       @controllers.Application.saveTagline(user)

POST    /:author/:slug                                          @controllers.project.Projects.showFirstVersionCreator(author, slug)
GET     /:author/:slug                                          @controllers.project.Projects.show(author, slug)
GET     /:author/:slug/star/:starred                            @controllers.project.Projects.setStarred(author, slug, starred: Boolean)

GET     /:author/:slug/dicuss                                   @controllers.project.Projects.showDiscussion(author, slug)

GET     /:author/:slug/manage                                   @controllers.project.Projects.showManager(author, slug)
POST    /:author/:slug/manage/save                              @controllers.project.Projects.save(author, slug)
POST    /:author/:slug/manage/rename                            @controllers.project.Projects.rename(author, slug)
POST    /:author/:slug/manage/delete                            @controllers.project.Projects.delete(author, slug)

GET     /:author/:slug/issues                                   @controllers.project.Projects.showIssues(author, slug)
GET     /:author/:slug/source                                   @controllers.project.Projects.showSource(author, slug)


# ---------- Pages ----------

GET     /:author/:slug/pages/:page/edit                         @controllers.project.Pages.showEditor(author, slug, page)
POST    /:author/:slug/pages/:page/edit                         @controllers.project.Pages.save(author, slug, page)
GET     /:author/:slug/pages/:page/delete                       @controllers.project.Pages.delete(author, slug, page)
GET     /:author/:slug/pages/:page                              @controllers.project.Pages.show(author, slug, page)


# ---------- Channels ----------

GET     /:author/:slug/channels                                 @controllers.project.Channels.showList(author, slug)
POST    /:author/:slug/channels                                 @controllers.project.Channels.create(author, slug)
POST    /:author/:slug/channels/:channel                        @controllers.project.Channels.edit(author, slug, channel)
GET     /:author/:slug/channels/:channel/delete                 @controllers.project.Channels.delete(author, slug, channel)


# ---------- Versions ----------

GET     /:author/:slug/versions                                 @controllers.project.Versions.showList(author, slug, channels: Option[String])

GET     /:author/:slug/versions/:channel/:version/delete        @controllers.project.Versions.delete(author, slug, channel, version)

GET     /:author/:slug/versions/download/:channel/:version      @controllers.project.Versions.download(author, slug, channel, version)
GET     /:author/:slug/versions/download/recommended            @controllers.project.Versions.downloadRecommended(author, slug)

GET     /:author/:slug/versions/new                             @controllers.project.Versions.showCreator(author, slug)
POST    /:author/:slug/versions/new/upload                      @controllers.project.Versions.upload(author, slug)
GET     /:author/:slug/versions/new/:channel/:version           @controllers.project.Versions.showCreatorWithMeta(author, slug, channel, version)

POST    /:author/:slug/versions/:channel/:version               @controllers.project.Versions.create(author, slug, channel, version)
GET     /:author/:slug/versions/:channel/:version               @controllers.project.Versions.show(author, slug, channel, version)
POST    /:author/:slug/versions/:channel/:version/save          @controllers.project.Versions.saveDescription(author, slug, channel, version)


# ---------- Other ----------

GET     /assets/*file                                           controllers.Assets.at(path="/public", file)
